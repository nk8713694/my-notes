CartController.java
======================
package com.ecomm.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ecomm.dao.CartDAO;
import com.ecomm.dao.ProductDAO;
import com.ecomm.model.Cart;
import com.ecomm.model.Product;

@Controller
public class CartController 
{

	@Autowired
	CartDAO cartDAO;
	
	@Autowired
	ProductDAO productDAO;
	
	@RequestMapping(value="/cart")
	public String showCartPage(Model m,HttpSession session)
	{
		String username=(String)session.getAttribute("username");
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/addToCart/{productId}")
	public String addToCart(@PathVariable("productId")int productId,@RequestParam("quantity")int quantity,Model m,HttpSession session)
	{
		
		Product product=productDAO.getProduct(productId);
		String username=(String)session.getAttribute("username");
		Cart cartItem=new Cart();
		
		cartItem.setProductId(productId);
		cartItem.setProductName(product.getProductName());
		cartItem.setPrice(product.getPrice());
		cartItem.setQuantity(quantity);
		cartItem.setStatus("NP");
		cartItem.setUsername(username);
		
		cartDAO.addToCart(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/deleteCartItem/{cartItemId}")
	public String deleteCartItem(@PathVariable("cartItemId")int cartItemId,Model m,HttpSession session)
	{
		Cart cartItem=cartDAO.getCartItem(cartItemId);
		String username=(String)session.getAttribute("username");
		
		cartDAO.deleteItemFromCart(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/updateCartItem/{cartItemId}",method=RequestMethod.POST)
	public String updateCartItem(@PathVariable("cartItemId")int cartItemId,Model m,HttpSession session,@RequestParam("quantity")int quantity)
	{
		Cart cartItem=cartDAO.getCartItem(cartItemId);
		String username=(String)session.getAttribute("username");
		
		cartItem.setQuantity(quantity);
		cartDAO.updateCartItem(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	public int calcTotalAmount(List<Cart> cartItemList)
	{
		int totalAmount=0;
		int i=0;
		while(i<cartItemList.size())
		{
			Cart cart=cartItemList.get(i);
			totalAmount=totalAmount+(cart.getPrice()*cart.getQuantity());
			i++;
		}	
		return totalAmount;
	}
	
}

Cart.jsp
============
package com.ecomm.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ecomm.dao.CartDAO;
import com.ecomm.dao.ProductDAO;
import com.ecomm.model.Cart;
import com.ecomm.model.Product;

@Controller
public class CartController 
{

	@Autowired
	CartDAO cartDAO;
	
	@Autowired
	ProductDAO productDAO;
	
	@RequestMapping(value="/cart")
	public String showCartPage(Model m,HttpSession session)
	{
		String username=(String)session.getAttribute("username");
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/addToCart/{productId}")
	public String addToCart(@PathVariable("productId")int productId,@RequestParam("quantity")int quantity,Model m,HttpSession session)
	{
		
		Product product=productDAO.getProduct(productId);
		String username=(String)session.getAttribute("username");
		Cart cartItem=new Cart();
		
		cartItem.setProductId(productId);
		cartItem.setProductName(product.getProductName());
		cartItem.setPrice(product.getPrice());
		cartItem.setQuantity(quantity);
		cartItem.setStatus("NP");
		cartItem.setUsername(username);
		
		cartDAO.addToCart(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/deleteCartItem/{cartItemId}")
	public String deleteCartItem(@PathVariable("cartItemId")int cartItemId,Model m,HttpSession session)
	{
		Cart cartItem=cartDAO.getCartItem(cartItemId);
		String username=(String)session.getAttribute("username");
		
		cartDAO.deleteItemFromCart(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	@RequestMapping(value="/updateCartItem/{cartItemId}",method=RequestMethod.POST)
	public String updateCartItem(@PathVariable("cartItemId")int cartItemId,Model m,HttpSession session,@RequestParam("quantity")int quantity)
	{
		Cart cartItem=cartDAO.getCartItem(cartItemId);
		String username=(String)session.getAttribute("username");
		
		cartItem.setQuantity(quantity);
		cartDAO.updateCartItem(cartItem);
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Cart";
	}
	
	public int calcTotalAmount(List<Cart> cartItemList)
	{
		int totalAmount=0;
		int i=0;
		while(i<cartItemList.size())
		{
			Cart cart=cartItemList.get(i);
			totalAmount=totalAmount+(cart.getPrice()*cart.getQuantity());
			i++;
		}	
		return totalAmount;
	}
	
}
OrderController.java
========================
package com.ecomm.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ecomm.dao.CartDAO;
import com.ecomm.dao.ProductDAO;
import com.ecomm.dao.UserDAO;
import com.ecomm.model.Cart;
import com.ecomm.model.UserDetail;

@Controller
public class OrderController 
{
	@Autowired
	CartDAO cartDAO;
	
	@Autowired
	ProductDAO productDAO;
	
	@Autowired
	UserDAO userDAO;
	
	@RequestMapping(value="/orderConfirm")
	public String showOrderConfirm(Model m,HttpSession session)
	{
		
		String username=(String)session.getAttribute("username");
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		UserDetail user=userDAO.getUser(username);
		m.addAttribute("addr", user.getAddress());
		
		return "OrderConfirm";
	}
	
	@RequestMapping(value="/paymentPage")
	public String showPaymentPage(Model m,HttpSession session)
	{
		String username=(String)session.getAttribute("username");
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		return "Payment";
		
	}
	
	@RequestMapping(value="/updateAddress",method=RequestMethod.POST)
	public String updateAddress(@RequestParam("address")String address,Model m,HttpSession session)
	{
		String username=(String)session.getAttribute("username");
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		UserDetail user=userDAO.getUser(username);
		user.setAddress(address);
		
		userDAO.updateUserDetail(user);
		
		m.addAttribute("addr", user.getAddress());
		
		return "OrderConfirm";
	}
	
	public int calcTotalAmount(List<Cart> cartItemList)
	{
		int totalAmount=0;
		int i=0;
		while(i<cartItemList.size())
		{
			Cart cart=cartItemList.get(i);
			totalAmount=totalAmount+(cart.getPrice()*cart.getQuantity());
			i++;
		}	
		return totalAmount;
	}
	
}

OrderConfirm.jsp
=================
<%@ page language="java" contentType="text/html"%>

<%@ include file="CommonHeader.jsp"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<link rel="stylesheet" href="<c:url value="/resources/css/MyCSS.css"/>"/>

<section class="jumbotron text-center">
    <div class="container">
        <h1 class="jumbotron-heading">Your Order</h1>
     </div>
</section>

<div class="container mb-4">
    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col"> </th>
                            <th scope="col">Product</th>
                            <th scope="col" class="text-center">Quantity</th>
                            <th scope="col" class="text-right">Price</th>
                            <th scope="col" class="text-right"> </th>
                            <th scope="col">Total Amount</th>
                         
                        </tr>
                    </thead>
                    <tbody>
                    	<c:forEach items="${cartItemList}" var="cartItem">
                        <tr>
                            <td><img src="<c:url value="/resources/images/${cartItem.productId}.jpg"/>" width="50" height="50"/> </td>
                            <td>${cartItem.productName}</td>
                            <td>${cartItem.quantity}</td>
                            <td class="text-right">${cartItem.price}</td>
                             
                            <td class="text-right">${cartItem.price * cartItem.quantity}</td>
                            <td class="text-right">
                          	</td>
            
                        </tr>
                        </c:forEach>
                        
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>Sub-Total</td>
                            <td class="text-right">${totalAmount}</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                           
                            <td>Shipping</td>
                            <td class="text-right">${totalAmount/20}</td>
                             <td></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                           
                            <td><strong>Total</strong></td>
                            <td class="text-right"><strong>${totalAmount + (totalAmount/20)}</strong></td>
                            <td></td>
                        </tr>
                        
                        <tr>
                        	<form action="<c:url value="/updateAddress"/>" method="post">
                        	<td>Deliver Here</td>
                        	<td colspan="4">
                        	<textArea cols="80" rows="5" name="address">${addr}</textArea>
                        	</td>
                        	<td>
                        		<input type="submit" value="Update Address" class="btn btn-success"/>
                        	</td>
                        	</form>
                        </tr>
                        
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col mb-2">
            <div class="row">
                <div class="col-sm-12  col-md-6">
                    <a href="<c:url value="/cart"/>" class="btn btn-block btn-info">Edit Cart</a>
                </div>
                <div class="col-sm-12 col-md-6 ">
                    <a href="<c:url value="/paymentPage"/>" class="btn btn-block btn-success">Payment</a>
                </div>
            </div>
        </div>
    </div>
</div>

</body>
</html>

Payment.jsp
==================
<%@ page language="java" contentType="text/html"%>
<%@ include file="CommonHeader.jsp"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<link rel="stylesheet" href="<c:url value="/resources/css/payment.css"/>"/>

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Payment Details
                    </h3>
                </div>
             <form role="form">
                <div class="panel-body">
                   
                    <div class="form-group">
                    	<label for="paymentMode">Payment Mode</label>
                    	<div class="input-group">
                    	<input type="radio" class="form-control" id="paymentMode" name="pmode" value="CC">Credit Card
                    	<input type="radio" class="form-control" id="paymentMode" name="pmode" value="COD">Cash on Delivery
                    	</div>
                    </div>
                    <div class="form-group">
                        <label for="cardNumber">
                            CARD NUMBER</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="cardNumber" placeholder="Valid Card Number"
                                required autofocus />
                            <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-7 col-md-7">
                            <div class="form-group">
                                <label for="expityMonth">
                                    EXPIRY DATE</label>
                                <div class="col-xs-6 col-lg-6 pl-ziro">
                                    <input type="text" class="form-control" id="expityMonth" placeholder="MM" required />
                                </div>
                                <div class="col-xs-6 col-lg-6 pl-ziro">
                                    <input type="text" class="form-control" id="expityYear" placeholder="YY" required /></div>
                            </div>
                        </div>
                        <div class="col-xs-5 col-md-5 pull-right">
                            <div class="form-group">
                                <label for="cvCode">
                                    CVV</label>
                                <input type="password" class="form-control" id="cvCode" placeholder="CVV" required />
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
            <ul class="nav nav-pills nav-stacked">
                <li class="active"><a href="#"><span class="badge pull-right"><span class="glyphicon glyphicon-inr"></span>${totalAmount}</span> Final Payment</a>
                </li>
            </ul>
            <br/>
            <a href="" class="btn btn-success btn-lg btn-block" role="button">Pay</a>
        </div>
        </form>
    </div>
</div>



</body>
</html>