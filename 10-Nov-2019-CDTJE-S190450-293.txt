Step 1: Creating OrderDetail Class in Backend

OrderDetail.java
====================
package com.ecomm.model;

import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table
public class OrderDetail {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	int orderId;

	String username;
	Date orderDate;
	int totalShoppingAmount;
	String pmode;

	public int getOrderId() {
		return orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public Date getOrderDate() {
		return orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	public int getTotalShoppingAmount() {
		return totalShoppingAmount;
	}

	public void setTotalShoppingAmount(int totalShoppingAmount) {
		this.totalShoppingAmount = totalShoppingAmount;
	}

	public String getPmode() {
		return pmode;
	}

	public void setPmode(String pmode) {
		this.pmode = pmode;
	}

}

Step 2: Creating the OrderDAO interface 

OrderDAO.java
=================
package com.ecomm.dao;

import com.ecomm.model.OrderDetail;

public interface OrderDAO 
{
	public boolean payment(OrderDetail orderDetail);
	public boolean updateCartItemStatus(String username,int orderId);
}

Step 3: Creating the OrderDAOImpl class for implementing DAO.

OrderDAOImpl.java
====================
package com.ecomm.dao;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.ecomm.model.OrderDetail;

@Repository("orderDAO")
@Transactional
public class OrderDAOImpl implements OrderDAO
{

	@Autowired
	SessionFactory sessionFactory;
	
	@Override
	public boolean payment(OrderDetail orderDetail)
	{
		try
		{
			sessionFactory.getCurrentSession().save(orderDetail);
			return true;
		}
		catch(Exception e)
		{
			return false;
		}
	}

	@Override
	public boolean updateCartItemStatus(String username, int orderId) 
	{
		Session session=sessionFactory.getCurrentSession();
		Query query=session.createQuery("update Cart set status='P',orderId=:ordId where username=:uname and status='NP'");
		query.setParameter("ordId",orderId);
		query.setParameter("uname", username);
		
		int row_eff=query.executeUpdate();
		
		if(row_eff>0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	
}

Step 4 : Add the OrderDetail class in DBConfig.java

factory.addAnnotatedClass(OrderDetail.class);


Step 5 : Add the following code in OrderController.java in Frontend Module

OrderController.java
=====================
@Autowired
OrderDAO orderDAO;

@RequestMapping(value="/pay",method=RequestMethod.POST)
	public String pay(@RequestParam("pmode")String pmode,HttpSession session,Model m)
	{
		String username=(String)session.getAttribute("username");
		
		List<Cart> cartItemList=cartDAO.listCartItems(username);
		m.addAttribute("cartItemList", cartItemList);
		
		int totalAmount=this.calcTotalAmount(cartItemList);
		m.addAttribute("totalAmount",totalAmount);
		
		UserDetail user=userDAO.getUser(username);
		m.addAttribute("addr", user.getAddress());
		
		OrderDetail orderDetail=new OrderDetail();
		orderDetail.setPmode(pmode);
		orderDetail.setTotalShoppingAmount(totalAmount);
		orderDetail.setUsername(username);
		orderDetail.setOrderDate(new java.util.Date());
		
		orderDAO.payment(orderDetail);
		orderDAO.updateCartItemStatus(username,orderDetail.getOrderId());
		
		m.addAttribute("orderInfo", orderDetail);
		
		return "Receipt";
	}

Step 6 : Add the Receipt.jsp Page
====================================
Receipt.jsp
==============
<%@ page language="java" contentType="text/html"%>
<%@ include file="CommonHeader.jsp"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<link rel="stylesheet" href="<c:url value="/resources/css/payment.css"/>"/>

 <div class="invoice overflow-auto">
        <div style="min-width: 600px">
            <header>
                <div class="row">
                    <div class="col">
                        <a target="_blank" href="https://lobianijs.com">
                            <img src="http://lobianijs.com/lobiadmin/version/1.0/ajax/img/logo/lobiadmin-logo-text-64.png" data-holder-rendered="true" />
                        </a>
                    </div>
                    <div class="col company-details">
                        <h2 class="name">
                            <a target="_blank" href="https://lobianijs.com">
                            Mobile Mania
                            </a>
                        </h2>
                        <div>${addr}</div>
                    </div>
                </div>
            </header>
            <main>
                <div class="row contacts">
                    <div class="col invoice-to">
                        <div class="text-gray-light">INVOICE TO:</div>
                        <h2 class="to">${orderInfo.username}</h2>
                        <div class="address">${addr}</div>
                        <div class="email"><a href="mailto:john@example.com">john@example.com</a></div>
                    </div>
                    <div class="col invoice-details">
                        <h1 class="invoice-id">${orderInfo.orderId}</h1>
                        <div class="date">Date of Invoice: ${orderInfo.orderDate}</div>
                        <div class="date">Due Date: NA</div>
                    </div>
                </div>
                <table border="0" cellspacing="0" cellpadding="0">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th class="text-left">PRODUCT</th>
                            <th class="text-right">QUANTITY</th>
                            <th class="text-right">PRICE</th>
                            <th class="text-right">TOTAL AMOUNT</th>
                        </tr>
                    </thead>
                    <tbody>
                    <c:forEach items="${cartItemList}" var="cartItem">
                        <tr>
                            <td class="no">1</td>
                            <td class="text-left">${cartItem.productName}</td>
                            <td class="unit">${cartItem.quantity}</td>
                            <td class="qty">${cartItem.price}</td>
                            <td class="total">${cartItem.price * cartItem.quantity}</td>
                        </tr>
                      </c:forEach>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2"></td>
                            <td colspan="2">SUBTOTAL</td>
                            <td>${totalAmount}</td>
                        </tr>
                        <tr>
                            <td colspan="2"></td>
                            <td colspan="2">TAX 18%</td>
                            <td>${totalAmount * 0.18}</td>
                        </tr>
                        <tr>
                            <td colspan="2"></td>
                            <td colspan="2">GRAND TOTAL</td>
                            <td>${totalAmount + (totalAmount * 0.18)}</td>
                        </tr>
                    </tfoot>
                </table>
                <div class="thanks">Thank you!</div>
                <div class="notices">
                    <div>NOTICE:</div>
                    <div class="notice">A finance charge of 1.5% will be made on unpaid balances after 30 days.</div>
                </div>
            </main>
            <footer>
                Invoice was created on a computer and is valid without the signature and seal.
            </footer>
        </div>
        <!--DO NOT DELETE THIS div. IT is responsible for showing footer always at the bottom-->
        <div></div>
    </div>
</div>


</body>
</html>

